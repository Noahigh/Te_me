"""
Django settings for Te_me project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys

# 日志记录相关
import logging
import django.utils.log
import logging.handlers

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 从 apps 目录下检索自己的应用
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
# 从 extra_apps 目录下检索引入的第三方引用
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))
# 从 log 目录下检索系统日志文件
sys.path.insert(0, os.path.join(BASE_DIR, 'log'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'tn_kuvnx-5uk*xlh%qy1u=y47^n!qoqbmv7o=762-k)@#kv7ge'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 自己的apps
    'blog.apps.BlogConfig',
    'projects_combat.apps.ProjectsCombatConfig',
    'users.apps.UsersConfig',

    # 引入的第三方的apps

]

# 重载 AUTHENTICATION_BACKENDS
# PS：在引入 xadmin 时使用，改变默认的登录界面
# AUTHENTICATION_BACKENDS = (
#     'users.views.CustomBackend',
# )

# 重载 AUTH_USER_MODEL 方法
# PS：在想要使用自己定义的 user 数据库模型时使用
AUTH_USER_MODEL = 'users.UserProfile'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Te_me.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # 设置 Templates 对应的“根”目录
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # django 的内部处理类，Templates的上下文处理器
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'Te_me.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        # MySQL setting
        # 指明使用的是哪个数据库引擎
        'ENGINE': 'django.db.backends.mysql',
        # 指明使用的是哪个数据库
        'NAME': 'te_me',
        # 指明用户名和密码
        'USER': 'root',
        'PASSWORD': 'root',
        # 指明主机位置
        'HOST': '127.0.0.1',
        # 指明连接端口
        'PORT': '3306',
    },
    # sqlite3 setting
    'sqlite3': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    # redis setting
    'redis': {
        # 指明 Redis 主机
        'REDIS_HOST': '127.0.0.1',
        # 指明 Redis 连接端口
        'REDIS_PORT': '6379',
        # 指明 Redis 连接的数据库，相当于上面MySQL设置中的 NAME 属性
        'REDIS_DB': '0',

    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Log Record
#
# LOGGING = {
#     'version': 1.0,
#     'disable_exiting_loggers': True,
#     'formatters': {
#         'standard': {
#             # Log Format
#             'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] \ '
#                       ' [%(levelname)s]- %(message)s'
#         }
#     },
#     'filters': {
#
#     },
#     'handlers': {
#         'mail_admins': {
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             'include_htm': True,
#         },
#         'default': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             # Log Output File
#             'filename': BASE_DIR + '/log/all.log',
#             # Log Max Size
#             'maxBytes': 1024 * 1024 * 5,
#             # Backup Files numbers
#             'backupCount': 5,
#             # Log Format
#             'formatter': 'standard',
#         },
#         'error': {
#             'level': 'ERROR',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': BASE_DIR + '/log/error.log',
#             'maxBytes': 1024 * 1024 * 5,
#             'backupCount': 5,
#             'formatter': 'standard',
#         },
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard',
#         },
#         'request_handler': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': BASE_DIR + '/log/request.log',
#             'maxBytes': 1024 * 1024 * 5,
#             'backupCount': 5,
#             'formatter': 'standard',
#         },
#         'scripts_handler': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': BASE_DIR + '/log/script.log',
#             'maxBytes': 1024 * 1024 * 5,
#             'backupCount': 5,
#             'formatter': 'standard',
#         }
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['default', 'console'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#         'django.request': {
#             'handlers': ['request_handler'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#         'scripts': {
#             'handlers': ['scripts_handler'],
#             'level': 'INFO',
#             'propagate': False,
#         },
#         'Te_me.apps.views': {
#
#         },
#         # TODO
#         # 'Te_me.a'
#     }
# }


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

# 英文
# LANGUAGE_CODE = 'en-us'
# 中文
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'
# 设定市区为： 本地时间（中国上海）
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# True 会同步UTC时间，False 则会改用本地时间
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
# 静态文件路径
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# MEDIA settings
MEDIA_URL = '/files/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'files')
